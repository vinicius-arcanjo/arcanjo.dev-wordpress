http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    server_tokens off;

    fastcgi_buffers 256 4k;

    # define an easy to reference name that can be used in fastgi_pass
    upstream heroku-fcgi {
        server unix:/tmp/heroku.fcgi.8080.sock max_fails=3 fail_timeout=3s;
        keepalive 16;
    }

    server {
        # define an easy to reference name that can be used in try_files
        location @heroku-fcgi {
            include fastcgi_params;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_param SCRIPT_FILENAME /workspace/web/fastcgi;
            # try_files resets $fastcgi_path_info, see http://trac.nginx.org/nginx/ticket/321, so we use the if instead
            fastcgi_param PATH_INFO /workspace/web/fastcgi if_not_empty;
            # pass actual request host instead of localhost
            fastcgi_param SERVER_NAME arcanjo.dev;

            if (!-f /fastcgi) {
                # check if the script exists
                # otherwise, /foo.jpg/bar.php would get passed to FPM, which wouldn't run it as it's not in the list of allowed extensions, but this check is a good idea anyway, just in case
                return 404;
            }

            fastcgi_pass heroku-fcgi;
        }

        server_name arcanjo.dev;
        listen 8080;
        # FIXME: breaks redirects with foreman
        port_in_redirect off;

        # Your document root here
        root "/workspace/web";

        error_log stderr;
        access_log /tmp/heroku.nginx_access.8080.log;

        # Your custom config start
        client_max_body_size 100M;
        index index.php index.html;
        fastcgi_buffers 4 256k;
        fastcgi_buffer_size 128k;

        location / {
            try_files $uri $uri/ /index.php?$args;
        }
        # Your custom config end

        # restrict access to hidden files, just in case
        location ~ /\. {
            deny all;
        }

        # default handling of .php
        location ~ \.php {
            try_files @heroku-fcgi @heroku-fcgi;
        }
    }
}